pipeline{
    agent any

    parameters{

        choice(name: 'action', choices: 'create\ndestroy\ndestroyekscluster', description: 'create/update or destroy eks')

    }
    environment{
        ACCESS_KEY = credentials('aws_access_key_id')
        SECRET_KEY = credentials('aws_secret_access_key')
    }

    stages{

        stage('git checkout'){

            steps{
                git 'https://github.com/ravihebbal/java_login_app1.git'
                
            }
        }

        stage('eks connect'){

            steps{
                sh """
                
                aws configure set aws_access_key_id "$ACCESS_KEY"
                aws configure set aws_secret_access_key "$SECRET_KEY"
                aws configure set region "us-east-1"
                aws eks update-kubeconfig --name ed-eks-01 --region us-east-1
                """
            }
        }

        stage('eks deployment'){
            when {  expression { params.action == 'create'} }
            steps{

                scrip{
                    def apply = false

                    try{
                        input message:  'please conform the apply to initita the deployment', ok: 'Ready to apply the config'
                        apply = true
                    }
                    catch(err){
                        apply = false
                        CurrentBuild.result = 'UNSTABLE'
                    }
                    if(apply){
                        sh """
                        kubectl apply -f .
                                """
                    }
                }

            }
        

        }
    }
}
